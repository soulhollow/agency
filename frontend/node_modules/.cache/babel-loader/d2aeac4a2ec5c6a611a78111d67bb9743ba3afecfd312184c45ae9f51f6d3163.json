{"ast":null,"code":"import axios from 'axios';\nclass ApiService {\n  constructor() {\n    this.apiClient = axios.create({\n      baseURL: 'https://localhost:8443/api',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Product APIs\n  getAllProducts() {\n    return this.apiClient.get('/products');\n  }\n  getProductById(id) {\n    return this.apiClient.get(`/products/${id}`);\n  }\n  createProduct(product) {\n    return this.apiClient.post('/products', product);\n  }\n  updateProduct(id, product) {\n    return this.apiClient.put(`/products/${id}`, product);\n  }\n  deleteProduct(id) {\n    return this.apiClient.delete(`/products/${id}`);\n  }\n\n  // Auth APIs\n  login(loginRequest) {\n    return this.apiClient.post('/auth/login', loginRequest);\n  }\n  register(userDTO) {\n    return this.apiClient.post('/auth/register', userDTO);\n  }\n\n  // Order APIs\n  getAllOrders() {\n    return this.apiClient.get('/orders');\n  }\n  getOrderById(id) {\n    return this.apiClient.get(`/orders/${id}`);\n  }\n  createOrder(orderDTO) {\n    return this.apiClient.post('/orders', orderDTO);\n  }\n  updateOrder(id, orderDTO) {\n    return this.apiClient.put(`/orders/${id}`, orderDTO);\n  }\n  deleteOrder(id) {\n    return this.apiClient.delete(`/orders/${id}`);\n  }\n\n  // Payment APIs\n  /*processPayment(paymentRequest) {\r\n      return this.apiClient.post('/payments', paymentRequest);\r\n  }*/\n}\nconst apiServiceInstance = new ApiService();\nexport default apiServiceInstance;","map":{"version":3,"names":["axios","ApiService","constructor","apiClient","create","baseURL","headers","getAllProducts","get","getProductById","id","createProduct","product","post","updateProduct","put","deleteProduct","delete","login","loginRequest","register","userDTO","getAllOrders","getOrderById","createOrder","orderDTO","updateOrder","deleteOrder","apiServiceInstance"],"sources":["C:/Users/fr/website-react/react-website/src/context/ApiService.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass ApiService {\r\n    constructor() {\r\n        this.apiClient = axios.create({\r\n            baseURL: 'https://localhost:8443/api', \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n    }\r\n\r\n    // Product APIs\r\n    getAllProducts() {\r\n        return this.apiClient.get('/products');\r\n    }\r\n\r\n    getProductById(id) {\r\n        return this.apiClient.get(`/products/${id}`);\r\n    }\r\n\r\n    createProduct(product) {\r\n        return this.apiClient.post('/products', product);\r\n    }\r\n\r\n    updateProduct(id, product) {\r\n        return this.apiClient.put(`/products/${id}`, product);\r\n    }\r\n\r\n    deleteProduct(id) {\r\n        return this.apiClient.delete(`/products/${id}`);\r\n    }\r\n\r\n    // Auth APIs\r\n    login(loginRequest) {\r\n        return this.apiClient.post('/auth/login', loginRequest);\r\n    }\r\n\r\n    register(userDTO) {\r\n        return this.apiClient.post('/auth/register', userDTO);\r\n    }\r\n\r\n    // Order APIs\r\n    getAllOrders() {\r\n        return this.apiClient.get('/orders');\r\n    }\r\n\r\n    getOrderById(id) {\r\n        return this.apiClient.get(`/orders/${id}`);\r\n    }\r\n\r\n    createOrder(orderDTO) {\r\n        return this.apiClient.post('/orders', orderDTO);\r\n    }\r\n\r\n    updateOrder(id, orderDTO) {\r\n        return this.apiClient.put(`/orders/${id}`, orderDTO);\r\n    }\r\n\r\n    deleteOrder(id) {\r\n        return this.apiClient.delete(`/orders/${id}`);\r\n    }\r\n\r\n    // Payment APIs\r\n    /*processPayment(paymentRequest) {\r\n        return this.apiClient.post('/payments', paymentRequest);\r\n    }*/\r\n}\r\n\r\n\r\nconst apiServiceInstance = new ApiService(); \r\nexport default apiServiceInstance; \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;MAC1BC,OAAO,EAAE,4BAA4B;MACrCC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;EACN;;EAEA;EACAC,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACJ,SAAS,CAACK,GAAG,CAAC,WAAW,CAAC;EAC1C;EAEAC,cAAcA,CAACC,EAAE,EAAE;IACf,OAAO,IAAI,CAACP,SAAS,CAACK,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAChD;EAEAC,aAAaA,CAACC,OAAO,EAAE;IACnB,OAAO,IAAI,CAACT,SAAS,CAACU,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;EACpD;EAEAE,aAAaA,CAACJ,EAAE,EAAEE,OAAO,EAAE;IACvB,OAAO,IAAI,CAACT,SAAS,CAACY,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,OAAO,CAAC;EACzD;EAEAI,aAAaA,CAACN,EAAE,EAAE;IACd,OAAO,IAAI,CAACP,SAAS,CAACc,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACnD;;EAEA;EACAQ,KAAKA,CAACC,YAAY,EAAE;IAChB,OAAO,IAAI,CAAChB,SAAS,CAACU,IAAI,CAAC,aAAa,EAAEM,YAAY,CAAC;EAC3D;EAEAC,QAAQA,CAACC,OAAO,EAAE;IACd,OAAO,IAAI,CAAClB,SAAS,CAACU,IAAI,CAAC,gBAAgB,EAAEQ,OAAO,CAAC;EACzD;;EAEA;EACAC,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACnB,SAAS,CAACK,GAAG,CAAC,SAAS,CAAC;EACxC;EAEAe,YAAYA,CAACb,EAAE,EAAE;IACb,OAAO,IAAI,CAACP,SAAS,CAACK,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;EAC9C;EAEAc,WAAWA,CAACC,QAAQ,EAAE;IAClB,OAAO,IAAI,CAACtB,SAAS,CAACU,IAAI,CAAC,SAAS,EAAEY,QAAQ,CAAC;EACnD;EAEAC,WAAWA,CAAChB,EAAE,EAAEe,QAAQ,EAAE;IACtB,OAAO,IAAI,CAACtB,SAAS,CAACY,GAAG,CAAC,WAAWL,EAAE,EAAE,EAAEe,QAAQ,CAAC;EACxD;EAEAE,WAAWA,CAACjB,EAAE,EAAE;IACZ,OAAO,IAAI,CAACP,SAAS,CAACc,MAAM,CAAC,WAAWP,EAAE,EAAE,CAAC;EACjD;;EAEA;EACA;AACJ;AACA;AACA;AAGA,MAAMkB,kBAAkB,GAAG,IAAI3B,UAAU,CAAC,CAAC;AAC3C,eAAe2B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}